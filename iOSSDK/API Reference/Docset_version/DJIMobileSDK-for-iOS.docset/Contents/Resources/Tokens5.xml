<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/DJIBattery.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/DJIBattery</TokenIdentifier>
			<Abstract type="html">This class manages the battery&apos;s information and real-time status of the connected product.</Abstract>
			<DeclaredIn>DJIBattery.h</DeclaredIn>
            
			
			<NodeRef refid="5"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIBattery/setNumberOfCell:</TokenIdentifier>
			<Abstract type="html">Returns the number of battery cells.</Abstract>
			<DeclaredIn>DJIBattery.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSUInteger numberOfCell</Declaration>
			
			
			<Anchor>//api/name/numberOfCell</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIBattery/numberOfCell</TokenIdentifier>
			<Abstract type="html">Returns the number of battery cells.</Abstract>
			<DeclaredIn>DJIBattery.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSUInteger numberOfCell</Declaration>
			
			
			<Anchor>//api/name/numberOfCell</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/DJIBattery/numberOfCell</TokenIdentifier>
			<Abstract type="html">Returns the number of battery cells.</Abstract>
			<DeclaredIn>DJIBattery.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSUInteger numberOfCell</Declaration>
			
			
			<Anchor>//api/name/numberOfCell</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIBattery/setDelegate:</TokenIdentifier>
			<Abstract type="html">Delegate that recevies the updated state pushed by the battery.</Abstract>
			<DeclaredIn>DJIBattery.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;DJIBatteryDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIBattery/delegate</TokenIdentifier>
			<Abstract type="html">Delegate that recevies the updated state pushed by the battery.</Abstract>
			<DeclaredIn>DJIBattery.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;DJIBatteryDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/DJIBattery/delegate</TokenIdentifier>
			<Abstract type="html">Delegate that recevies the updated state pushed by the battery.</Abstract>
			<DeclaredIn>DJIBattery.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;DJIBatteryDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIBattery/isSmartBattery</TokenIdentifier>
			<Abstract type="html">YES if battery is a smart battery.</Abstract>
			<DeclaredIn>DJIBattery.h</DeclaredIn>
			
			<Declaration>- (BOOL)isSmartBattery</Declaration>
			
			
			<Anchor>//api/name/isSmartBattery</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIBattery/getWarningInformationRecordsWithCompletion:</TokenIdentifier>
			<Abstract type="html">Gets the battery&apos;s history. The DJI battery keeps the history for
the past 30 days. The NSArray named history in the block holds objects of type
DJIBatteryWarningInformation. Need to check isSmartBattery method before using this method.
Not supported by OSMO.</Abstract>
			<DeclaredIn>DJIBattery.h</DeclaredIn>
			
			<Declaration>- (void)getWarningInformationRecordsWithCompletion:(void ( ^ ) ( NSArray&lt;DJIBatteryWarningInformation*&gt; *history , NSError *_Nullable error ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">Remote execution result callback block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getWarningInformationRecordsWithCompletion:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIBattery/getCurrentWarningInformationWithCompletion:</TokenIdentifier>
			<Abstract type="html">Gets the battery&apos;s current state, which is one of seven battery states, which
can be found at the top of DJIBattery.h. Need to check isSmartBattery method before using this method.
Not supported by OSMO.</Abstract>
			<DeclaredIn>DJIBattery.h</DeclaredIn>
			
			<Declaration>- (void)getCurrentWarningInformationWithCompletion:(void ( ^ ) ( DJIBatteryWarningInformation *state , NSError *_Nullable error ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">Remote execution result callback block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getCurrentWarningInformationWithCompletion:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIBattery/getCellVoltagesWithCompletion:</TokenIdentifier>
			<Abstract type="html">Gets the battery&apos;s cell voltages. The NSArray named cellArray holds objects of type
DJIBatteryCell. For the Inspire 1, since the battery has 6 cells, the array cellArray
will have 6 objects, one for each battery cell.</Abstract>
			<DeclaredIn>DJIBattery.h</DeclaredIn>
			
			<Declaration>- (void)getCellVoltagesWithCompletion:(void ( ^ ) ( NSArray&lt;DJIBatteryCell*&gt; *cellArray , NSError *_Nullable error ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">Remote execution result callback block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getCellVoltagesWithCompletion:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIBattery/setSelfDischargeDay:withCompletion:</TokenIdentifier>
			<Abstract type="html">Sets battery&apos;s custom self-discharge configuration in the range of [1, 10] days.
For example, if the value for &apos;day&apos; is set to 10, the battery will discharge over
the course of 10 days. Need to check isSmartBattery method before using this method.
Not supported by OSMO.</Abstract>
			<DeclaredIn>DJIBattery.h</DeclaredIn>
			
			<Declaration>- (void)setSelfDischargeDay:(uint8_t)day withCompletion:(DJICompletionBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>day</Name>
					<Abstract type="html">Day for self-discharge</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">Remote execution result error block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setSelfDischargeDay:withCompletion:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIBattery/getSelfDischargeDayWithCompletion:</TokenIdentifier>
			<Abstract type="html">Gets the battery&apos;s custom self-discharge configuration. Need to check isSmartBattery method before using this method.
Not supported by OSMO.</Abstract>
			<DeclaredIn>DJIBattery.h</DeclaredIn>
			
			<Declaration>- (void)getSelfDischargeDayWithCompletion:(void ( ^ ) ( uint8_t day , NSError *_Nullable error ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>result</Name>
					<Abstract type="html">Remote execution result error block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getSelfDischargeDayWithCompletion:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
        
	</File>
</Tokens>