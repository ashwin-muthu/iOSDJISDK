<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/DJIGimbal.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/DJIGimbal</TokenIdentifier>
			<Abstract type="html">This class provides multiple methods to control gimbal, like set gimbal work mode, rotate gimbal with angle, start gimbal auto calibration, etc.</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
            
			
			<NodeRef refid="24"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/setDelegate:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;DJIGimbalDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/delegate</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;DJIGimbalDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/DJIGimbal/delegate</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;DJIGimbalDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/setAttitudeInDegrees:</TokenIdentifier>
			<Abstract type="html">Returns the latest gimbal attitude data and nil if none is available.</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) DJIGimbalAttitude attitudeInDegrees</Declaration>
			
			
			<Anchor>//api/name/attitudeInDegrees</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/attitudeInDegrees</TokenIdentifier>
			<Abstract type="html">Returns the latest gimbal attitude data and nil if none is available.</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) DJIGimbalAttitude attitudeInDegrees</Declaration>
			
			
			<Anchor>//api/name/attitudeInDegrees</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/DJIGimbal/attitudeInDegrees</TokenIdentifier>
			<Abstract type="html">Returns the latest gimbal attitude data and nil if none is available.</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) DJIGimbalAttitude attitudeInDegrees</Declaration>
			
			
			<Anchor>//api/name/attitudeInDegrees</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/setCompletionTimeForControlAngleAction:</TokenIdentifier>
			<Abstract type="html">Sets the completion time, in seconds, to complete an action to control the gimbal. If
the method rotateGimbalWithAngleMode:pitch:roll:yaw:withCompletion is used to control the gimbal&apos;s absolute
angle，this property will be used to determine in what duration of time the gimbal should
rotate to its new position. For example, if the value of this property is set to 2.0
seconds, the gimbal will rotate to its target position in 2.0 seconds.
Range is [0.1,25.5] seconds.</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) double completionTimeForControlAngleAction</Declaration>
			
			
			<Anchor>//api/name/completionTimeForControlAngleAction</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/completionTimeForControlAngleAction</TokenIdentifier>
			<Abstract type="html">Sets the completion time, in seconds, to complete an action to control the gimbal. If
the method rotateGimbalWithAngleMode:pitch:roll:yaw:withCompletion is used to control the gimbal&apos;s absolute
angle，this property will be used to determine in what duration of time the gimbal should
rotate to its new position. For example, if the value of this property is set to 2.0
seconds, the gimbal will rotate to its target position in 2.0 seconds.
Range is [0.1,25.5] seconds.</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) double completionTimeForControlAngleAction</Declaration>
			
			
			<Anchor>//api/name/completionTimeForControlAngleAction</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/DJIGimbal/completionTimeForControlAngleAction</TokenIdentifier>
			<Abstract type="html">Sets the completion time, in seconds, to complete an action to control the gimbal. If
the method rotateGimbalWithAngleMode:pitch:roll:yaw:withCompletion is used to control the gimbal&apos;s absolute
angle，this property will be used to determine in what duration of time the gimbal should
rotate to its new position. For example, if the value of this property is set to 2.0
seconds, the gimbal will rotate to its target position in 2.0 seconds.
Range is [0.1,25.5] seconds.</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) double completionTimeForControlAngleAction</Declaration>
			
			
			<Anchor>//api/name/completionTimeForControlAngleAction</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/setGimbalWorkMode:withCompletion:</TokenIdentifier>
			<Abstract type="html">Sets the gimbal&apos;s work mode. See enum DJIGimbalWorkMode for modes.</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>- (void)setGimbalWorkMode:(DJIGimbalWorkMode)workMode withCompletion:(DJICompletionBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>workMode</Name>
					<Abstract type="html">Gimbal work mode to be set.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">Remote execution result error block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setGimbalWorkMode:withCompletion:</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/getGimbalConstraints</TokenIdentifier>
			<Abstract type="html">Gets the gimbal&apos;s constraints including which axes are adjustable, and what the axis stops are.</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>- (nullable DJIGimbalConstraints *)getGimbalConstraints</Declaration>
			
			<ReturnValue><Abstract type="html">Gimbal&apos;s constraints. If the SDK and the aircraft have lost connection with each other, the
method will return nil.</Abstract></ReturnValue>
			<Anchor>//api/name/getGimbalConstraints</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/rotateGimbalWithAngleMode:pitch:roll:yaw:withCompletion:</TokenIdentifier>
			<Abstract type="html">Rotate the gimbal&apos;s pitch, roll, and yaw in Angle Mode. The direction can either be set to clockwise or counter-clockwise.</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>- (void)rotateGimbalWithAngleMode:(DJIGimbalRotateAngleMode)angleMode pitch:(DJIGimbalAngleRotation)pitch roll:(DJIGimbalAngleRotation)roll yaw:(DJIGimbalAngleRotation)yaw withCompletion:(DJICompletionBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>pitch</Name>
					<Abstract type="html">Gimbal&apos;s pitch rotation.</Abstract>
				</Parameter><Parameter>
					<Name>roll</Name>
					<Abstract type="html">Gimbal&apos;s roll rotation.</Abstract>
				</Parameter><Parameter>
					<Name>yaw</Name>
					<Abstract type="html">Gimbal&apos;s yaw rotation.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">Execution result error block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/rotateGimbalWithAngleMode:pitch:roll:yaw:withCompletion:</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/rotateGimbalBySpeedWithPitch:roll:yaw:withCompletion:</TokenIdentifier>
			<Abstract type="html">Rotate the gimbal&apos;s pitch, roll, and yaw using speed. The direction can either be set to
clockwise or counter-clockwise.
For Phantom 3 Professional, Phantom 3 Advanced and Phantom 3 Standard, roll and yaw rotations are not available.
For Inspire 1, Inspire Pro and M100, pitch, roll and yaw rotations are available.
For OSMO, roll rotation is not available. The yaw angleVelocity of DJIGimbalSpeedRotation range is (0, 120).</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>- (void)rotateGimbalBySpeedWithPitch:(DJIGimbalSpeedRotation)pitch roll:(DJIGimbalSpeedRotation)roll yaw:(DJIGimbalSpeedRotation)yaw withCompletion:(DJICompletionBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>pitch</Name>
					<Abstract type="html">Gimbal&apos;s pitch rotation.</Abstract>
				</Parameter><Parameter>
					<Name>roll</Name>
					<Abstract type="html">Gimbal&apos;s roll rotation.</Abstract>
				</Parameter><Parameter>
					<Name>yaw</Name>
					<Abstract type="html">Gimbal&apos;s yaw rotation.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">Execution result error block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/rotateGimbalBySpeedWithPitch:roll:yaw:withCompletion:</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/resetGimbalWithCompletion:</TokenIdentifier>
			<Abstract type="html">Resets the gimbal. The gimbal&apos;s pitch, roll, and yaw will be set to the origin, which is
the standard position for the gimbal.</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>- (void)resetGimbalWithCompletion:(DJICompletionBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">Remote execution result error block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/resetGimbalWithCompletion:</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/startGimbalAutoCalibrationWithCompletion:</TokenIdentifier>
			<Abstract type="html">Starts calibrating the gimbal.</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>- (void)startGimbalAutoCalibrationWithCompletion:(DJICompletionBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">Remote execution result error block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startGimbalAutoCalibrationWithCompletion:</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/fineTuneGimbalRollInDegrees:withCompletion:</TokenIdentifier>
			<Abstract type="html">The gimbal roll can be fine tuned with a custom offset. The range for the custom offset is
[-10, 10] degrees. If the offset is negative, the gimbal will be fine tuned the specified
number of degrees in the counterclockwise direction.</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>- (void)fineTuneGimbalRollInDegrees:(float)offset withCompletion:(DJICompletionBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>offset</Name>
					<Abstract type="html">Fine-tune offset in degrees to be tuned.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">Completion block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fineTuneGimbalRollInDegrees:withCompletion:</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/isUserConfigSupported</TokenIdentifier>
			<Abstract type="html">YES if gimbal supports a user config (OSMO only).</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>- (BOOL)isUserConfigSupported</Declaration>
			
			
			<Anchor>//api/name/isUserConfigSupported</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/setGimbalUserConfigType:withCompletion:</TokenIdentifier>
			<Abstract type="html">Sets gimbal user config type.</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>- (void)setGimbalUserConfigType:(DJIGimbalUserConfigType)userConfigType withCompletion:(DJICompletionBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>userConfigType</Name>
					<Abstract type="html">Gimbal User Configure type.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">Set Gimbal User Config result block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setGimbalUserConfigType:withCompletion:</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/getGimbalUserConfigTypeWithCompletion:</TokenIdentifier>
			<Abstract type="html">Gets gimbal user config type.</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>- (void)getGimbalUserConfigTypeWithCompletion:(void ( ^ ) ( DJIGimbalUserConfigType userConfigType , BOOL success ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">Get Gimbal User Config result block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getGimbalUserConfigTypeWithCompletion:</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/setGimbalSmoothTrackAxisEnabledOnAxis:isEnabled:withCompletion:</TokenIdentifier>
			<Abstract type="html">Enables a gimbal SmoothTrack axis.</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>- (void)setGimbalSmoothTrackAxisEnabledOnAxis:(DJIGimbalSmoothTrackAxis)axis isEnabled:(BOOL)enabled withCompletion:(DJICompletionBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>axis</Name>
					<Abstract type="html">Gimbal axis.</Abstract>
				</Parameter><Parameter>
					<Name>enabled</Name>
					<Abstract type="html">YES if SmoothTrack is to be enabled on axis.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">set if Gimbal SmoothTrack Adjustment is available to be customized in the specific direction result block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setGimbalSmoothTrackAxisEnabledOnAxis:isEnabled:withCompletion:</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/getGimbalSmoothTrackAxisEnabledOnAxis:withCompletion:</TokenIdentifier>
			<Abstract type="html">Gets whether an axis has SmoothTrack enabled.</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>- (void)getGimbalSmoothTrackAxisEnabledOnAxis:(DJIGimbalSmoothTrackAxis)axis withCompletion:(void ( ^ ) ( BOOL isEnabled , BOOL success ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>axis</Name>
					<Abstract type="html">Gimbal axis.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">get if Gimbal SmoothTrack Adjustment is available to be customized in the specific direction result block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getGimbalSmoothTrackAxisEnabledOnAxis:withCompletion:</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/setGimbalSmoothTrackSpeedOnAxis:speed:withCompletion:</TokenIdentifier>
			<Abstract type="html">Sets gimbal SmoothTrack catch up speed on an axis. SmoothTrack speed determines how fast the gimbal will catch up with a large, translated handle movement and has a range [0,100].</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>- (void)setGimbalSmoothTrackSpeedOnAxis:(DJIGimbalSmoothTrackAxis)axis speed:(NSInteger)speed withCompletion:(DJICompletionBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>axis</Name>
					<Abstract type="html">Gimbal axis.</Abstract>
				</Parameter><Parameter>
					<Name>speed</Name>
					<Abstract type="html">SmoothTrack speed [0,100].</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">set Gimbal SmoothTrack Adjustment speed in specific direction result block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setGimbalSmoothTrackSpeedOnAxis:speed:withCompletion:</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/getGimbalSmoothTrackSpeedOnAxis:withCompletion:</TokenIdentifier>
			<Abstract type="html">Gets gimbal SmoothTrack speed on an axis. SmoothTrack speed determines how fast the gimbal will catch up with a large, translated handle movement and will have a range [0,100].</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>- (void)getGimbalSmoothTrackSpeedOnAxis:(DJIGimbalSmoothTrackAxis)axis withCompletion:(void ( ^ ) ( NSInteger speed , BOOL success ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>axis</Name>
					<Abstract type="html">Gimbal axis.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">get Gimbal SmoothTrack Adjustment speed in specific direction result block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getGimbalSmoothTrackSpeedOnAxis:withCompletion:</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/setGimbalSmoothTrackDeadbandOnAxis:deadband:withCompletion:</TokenIdentifier>
			<Abstract type="html">Sets SmoothTrack deadband on an axis. A larger deadband requires more handle movement to translate into gimbal motion. Deadband has a range of [0,90] degrees.</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>- (void)setGimbalSmoothTrackDeadbandOnAxis:(DJIGimbalSmoothTrackAxis)axis deadband:(NSInteger)deadband withCompletion:(DJICompletionBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>axis</Name>
					<Abstract type="html">Gimbal axis.</Abstract>
				</Parameter><Parameter>
					<Name>deadband</Name>
					<Abstract type="html">SmoothTrack deadband [0,90].</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">set Gimbal SmoothTrack Adjustment deadband in specific direction result block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setGimbalSmoothTrackDeadbandOnAxis:deadband:withCompletion:</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/getGimbalSmoothTrackDeadbandOnAxis:withCompletion:</TokenIdentifier>
			<Abstract type="html">Gets SmoothTrack deadband on an axis. A larger deadband requires more handle movement to translate into gimbal motion. Deadband has a range of [0,90] degrees.</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>- (void)getGimbalSmoothTrackDeadbandOnAxis:(DJIGimbalSmoothTrackAxis)axis withCompletion:(void ( ^ ) ( NSInteger deadband , BOOL success ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>axis</Name>
					<Abstract type="html">Gimbal axis.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">get Gimbal SmoothTrack Adjustment deadband in specific direction result block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getGimbalSmoothTrackDeadbandOnAxis:withCompletion:</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/setGimbalSmoothTrackAccelerationOnAxis:acceleration:withCompletion:</TokenIdentifier>
			<Abstract type="html">Sets SmoothTrack acceleration on an axis. Acceleration determines how closely the camera will follow the translated yaw handle movement and has a range of [0,30].</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>- (void)setGimbalSmoothTrackAccelerationOnAxis:(DJIGimbalSmoothTrackAxis)axis acceleration:(NSInteger)acceleration withCompletion:(DJICompletionBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>axis</Name>
					<Abstract type="html">Gimbal axis.</Abstract>
				</Parameter><Parameter>
					<Name>acceleration</Name>
					<Abstract type="html">SmoothTrack acceleration [0,30].</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">set Gimbal SmoothTrack Adjustment acceleration in specific direction result block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setGimbalSmoothTrackAccelerationOnAxis:acceleration:withCompletion:</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/getGimbalSmoothTrackAccelerationOnAxis:withCompletion:</TokenIdentifier>
			<Abstract type="html">Gets SmoothTrack acceleration on an axis. Acceleration determines how closely the camera will follow the translated yaw handle movement and has a range of [0,30].</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>- (void)getGimbalSmoothTrackAccelerationOnAxis:(DJIGimbalSmoothTrackAxis)axis withCompletion:(void ( ^ ) ( NSInteger acceleration , BOOL success ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>axis</Name>
					<Abstract type="html">Gimbal axis.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">get Gimbal SmoothTrack Adjustment acceleration in specific direction result block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getGimbalSmoothTrackAccelerationOnAxis:withCompletion:</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/setGimbalJoystickSmoothingOnAxis:smoothing:withCompletion:</TokenIdentifier>
			<Abstract type="html">Sets joystick smoothing on an axis. Joystick smoothing controls the deceleration of the gimbal. A small value will cause the gimbal to stop abruptly. Smoothing has a range of [0,30].</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>- (void)setGimbalJoystickSmoothingOnAxis:(DJIGimbalJoystickAxis)axis smoothing:(NSInteger)smoothing withCompletion:(DJICompletionBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>axis</Name>
					<Abstract type="html">Gimbal axis.</Abstract>
				</Parameter><Parameter>
					<Name>smoothing</Name>
					<Abstract type="html">Joystick Smoothing [0,30].</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">set Gimbal Joystick Smoothing in specific direction result block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setGimbalJoystickSmoothingOnAxis:smoothing:withCompletion:</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/getGimbalJoystickSmoothingOnAxis:withCompletion:</TokenIdentifier>
			<Abstract type="html">Gets joystick smoothing on an axis. Joystick smoothing controls the deceleration of the gimbal. A small value will cause the gimbal to stop abruptly. Smoothing has a range of [0,30].</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>- (void)getGimbalJoystickSmoothingOnAxis:(DJIGimbalJoystickAxis)axis withCompletion:(void ( ^ ) ( NSInteger smoothing , BOOL success ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>axis</Name>
					<Abstract type="html">Gimbal Joystick Direction.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">get Gimbal Joystick Smoothing in specific direction result block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getGimbalJoystickSmoothingOnAxis:withCompletion:</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/setGimbalJoystickSpeedOnAxis:speed:withCompletion:</TokenIdentifier>
			<Abstract type="html">Sets joystick speed on an axis. Speed has a range of [0,100].</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>- (void)setGimbalJoystickSpeedOnAxis:(DJIGimbalJoystickAxis)axis speed:(NSInteger)speed withCompletion:(DJICompletionBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>axis</Name>
					<Abstract type="html">Gimbal axis.</Abstract>
				</Parameter><Parameter>
					<Name>speed</Name>
					<Abstract type="html">Joystick speed [0,100].</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">set Gimbal Joystick Speed in specific direction result block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setGimbalJoystickSpeedOnAxis:speed:withCompletion:</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/getGimbalJoystickSpeedOnAxis:withCompletion:</TokenIdentifier>
			<Abstract type="html">Gets joystick speed on an axis. Speed has a range of [0,100].</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>- (void)getGimbalJoystickSpeedOnAxis:(DJIGimbalJoystickAxis)axis withCompletion:(void ( ^ ) ( NSInteger speed , BOOL success ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>axis</Name>
					<Abstract type="html">Gimbal Joystick Direction.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">get Gimbal Joystick Speed in specific direction result block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getGimbalJoystickSpeedOnAxis:withCompletion:</Anchor>
            <NodeRef refid="24"/>
		</Token>
		
        
	</File>
</Tokens>